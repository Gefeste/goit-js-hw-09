{"mappings":"YAGA,IAAMA,EAAOC,SAASC,cAAc,uBAC9BC,EAAYF,SAASC,cAAc,sBACnCE,EAAUH,SAASC,cAAc,wBACvCG,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZ,IAEIG,EAFSN,SAASC,cAAc,SAgC/BM,iBAAiB,UA3BA,SAACC,EAAUC,GAO/B,OANAC,MAAMC,iBACNP,QAAQC,IAAI,OAAQN,EAAKa,OACzBR,QAAQC,IAAI,YAAaH,EAAUU,OACnCR,QAAQC,IAAI,UAAWF,EAAQS,OAC/BH,EAAQI,OAAOd,EAAKa,OACpBJ,EAAW,EACJ,IAAIM,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WAETX,EAAUY,aAAY,WACpB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCb,GAAY,EACZC,GAASI,OAAOX,EAAUU,OACxBO,EACNf,QAAQC,IAAI,uBAAgDiB,OAAvBT,OAAOL,GAAU,QAAYc,OAANb,EAAM,OAEhEL,QAAMC,IAAI,sBAAuCiB,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAEnDI,OAAOV,EAAQS,SAAWJ,GAC5Be,cAAcjB,E,GAChBO,OAAOX,EAAUU,O,GAElBC,OAAOd,EAAKa,O","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n// Notiflix.Notify.failure('Please choose a date in the future');\n// Notiflix.Notify.success('Great, you choose a date in the future!');\nconst dela = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst counter = document.querySelector('input[name=\"amount\"]')\nconsole.log(dela)\nconsole.log(delayStep)\nconsole.log(counter)\nconst form = document.querySelector('.form')\n\nlet timerId\n\n\nconst createPromise = (position, delay) => {\n  event.preventDefault();\n  console.log(\"dela\", dela.value);\n  console.log(\"delayStep\", delayStep.value);\n  console.log(\"counter\", counter.value);\n  delay = Number(dela.value);\n  position = 0;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n\n      timerId = setInterval(() => {\n        const shouldResolve = Math.random() > 0.3;\n        position += 1;\n        delay += Number(delayStep.value);\n      if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${Number(position)} in ${delay}ms`);\n      } else { \n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      if (Number(counter.value) === position)\n        clearInterval(timerId);\n   }, Number(delayStep.value));\n    \n  }, Number(dela.value));\n    })\n};\n\nform.addEventListener('submit', createPromise)\n\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"],"names":["$ce04d3a99e08e73b$var$dela","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$counter","console","log","$ce04d3a99e08e73b$var$timerId","addEventListener","position","delay","event","preventDefault","value","Number","Promise","resolve","reject","setTimeout","setInterval","shouldResolve","Math","random","concat","clearInterval"],"version":3,"file":"03-promises.cc4e80af.js.map"}